Instalar Grunt

// Instalação no projeto

01) Para instalar, digite no terminal do projeto: npm i -g grunt-cli (cli: command line interface)

1.1) Criar um NPM. Digite: npm init

1.2) Pressionar ENTER para todas as perguntas

1.3) Digite no terminal: npm i --save-dev grunt

02) No arquivo package.json criado automaticamente, digite dentro de script: "grunt": "grunt",

03) Criar um arquivo chamado: gruntfile.js

3.1) Escrever dentro do arquivo: 
// module.exports vai receber uma função
// A função recebe um argumento que vai ser o próprio grunt
// Colocar dentro a função de configuração inicial
// Dentro das chaves estará o objeto de configuração
module.exports = function(grunt) {
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json')
    })
}

4) Primeiros passos *Não necessário
colocar dentro da função um registerTask assim: grunt.registerTask('olaGrunt', function() {
        console.log('Olá, Grunt');
    })

a) Ficará deste jeito: 
module.exports = function(grunt) {
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),
    });

    grunt.registerTask('olaGrunt', function() {
        console.log('Olá, Grunt');
    })
};

b) Para rodar este código, digite no terminal do projeto: npm rum grunt [nome da função. Neste caso olaGrunt]

4.1) Caso tenha uma tarefa muito pesada é preciso torná-la assíncrona
// Eu vou exemplificar uma tarefa muito pesada utilizando o setTimeout
grunt.registerTask('olaGrunt', function() {
        setTimeout(function(){
            console.log('Olá, Grunt');
        },3000)
    })

4.2) Tarefas assíncronas
// Como vamos avisar para o grunt que esta tarefa é demorada e que ele deve aguardar?
a) Crie uma nova variável: const done = this.async();

b) Chame a função após o que deve ser executado: done();

// Fica assim: 
 grunt.registerTask('olaGrunt', function() {
        const done = this.async();
        setTimeout(function(){
            console.log('Olá, Grunt');
            done();
        },3000)
    })

5) Crie a tarefa default assim: grunt.registerTask('default', ['olaGrunt']) // Ao invés de colocar uma função posso colocar um array que vai conter o nome de todas as tarefas que vão ser executadas.

a) Para executar esta tarefa, digite no terminal do projeto: npm run grunt
// Agora ele já rodando a tarefa default então não é mais necessário passar o nome da função

6) Trabalhar com less dentro do grunt
a) Digite no terminal do projeto: npm install --save-dev grunt-contrib-less

b) Chamar dentro da função grunt o carregamento acima do chamamento da tarefa default, assim: grunt.loadNpmTasks('grunt-contrib-less'); Vai ficar assim:   
grunt.loadNpmTasks('grunt-contrib-less');

grunt.registerTask('default', ['olaGrunt'])

c) Dentro da função grunt, abaixo de pkg colocar: 
	less: {
            development: {
                files: {
                    'main.css': 'main.less'
                }
            }
        }

d) Agora criar apenas um arquivo chamado: main.less
I) Para rodar, digite: npm run grunt

e) Criar um ambiente de produção (Arquivo minificado)
I) Abaixo do development, escrever: 
production: {
                options: {
                    compress: true // booleano
                },
                files: {
                    'main.min.css': 'main.less' // min de minificado (Versão de produção)
                }
            }
II) Para rodar, digite: npm run grunt // Isso vai criar um um novo arqivo minificado
Vai ficar assim: 
production: {
                options: {
                    compress: true // booleano
                },
                files: {
                    'main.min.css': 'main.less'
                }
            }

7) Utilizando o grunt para compilar o sass
I) Para instalar o plugin, digite no terminal: npm install --save-dev grunt-contrib-sass

II) Chame o plugin do sass, através de: grunt.loadNpmTasks('grunt-contrib-sass'); // Chama o plugin do sass

III) Configurando o sass no código: Após o bloco do less coloque o do sass. Fica assim:
// A configuração do sass é um pouco diferente da do less
        sass: {
            dist: {
                files: {
                    'main2.css': 'main.scss' // O main2.css é apenas para um arquivo não reescrever sobre o outro
                }
            }
        }

IV) Crie agora um arquivo .sass 

V) Adicione ao array default, assim: grunt.registerTask('default', ['less', 'sass']);

VI) *IPORTANTE* Antes de executar npm run grunt é preciso ter o ruby instalado no computador. Caso não tenha, no terminal será apresentado um erro. POrtanto, instale. 
a) Vá ao site: https://www.ruby-lang.org/ e baixe a versão mais estável
b) Após instalar no terminal do projeto, digite: gem install sass
c) Feito isso rode o grunt e o código sass será compilado

VII) Para que o arquivo final do sass - o css - também saia minificado podemos configurar isso. Antes de files escreva: 
options: {
    style: 'compressed'
}, 